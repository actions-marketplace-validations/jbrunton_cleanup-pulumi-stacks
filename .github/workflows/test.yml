name: 'build-test'

concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches:
      - develop
      - 'releases/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm install
      - run: |
          npm run all

  test:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TEST_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
        working-directory: pulumi
      - name: configure env
        run: |
          echo "DEV_TAG=dev-$TEST_NAME-1" >> $GITHUB_ENV
          echo "PROD_TAG=prod-$TEST_NAME-1" >> $GITHUB_ENV
          echo "DEV_STACK_NAME=$TEST_NAME-dev" >> $GITHUB_ENV
          echo "PROD_STACK_NAME=$TEST_NAME-prod" >> $GITHUB_ENV
      - name: create dev stack
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: ${{ env.DEV_STACK_NAME }}
          upsert: true
          work-dir: pulumi
        env:
          ENVIRONMENT_TAG: ${{ env.DEV_TAG }}
      - name: create prod stack
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: ${{ env.PROD_STACK_NAME }}
          upsert: true
          work-dir: pulumi
        env:
          ENVIRONMENT_TAG: ${{ env.PROD_TAG }}
      - name: assert both stacks
        run: EXPECTED_STACKS=$DEV_STACK_NAME,$PROD_STACK_NAME npx ts-node assert-stacks
        working-directory: pulumi
      - name: 'test: cleanup dev stack'
        uses: ./
        with:
          project: jbrunton/test-cleanup-pulumi-stacks
          working-directory: pulumi
          legacy-tags: 'environment: dev-${{ env.TEST_NAME }}*'
          timeout-hours: 0
          verbose: true
      - name: assert prod stack only
        run: EXPECTED_STACKS=$PROD_STACK_NAME npx ts-node assert-stacks
        working-directory: pulumi
      - name: 'test: cleanup prod stack'
        uses: ./
        with:
          project: jbrunton/test-cleanup-pulumi-stacks
          working-directory: pulumi
          legacy-tags: 'environment: prod-${{ env.TEST_NAME }}*'
          timeout-hours: 0
          verbose: true
      - name: assert zero stacks
        run: EXPECTED_STACKS= npx ts-node assert-stacks
        working-directory: pulumi
